
{
  "openapi": "3.0.0",
  "info": {
    "description": "This is a test",
    "version": "1.0.6",
    "title": "Swagger Petstore",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/": {
      "get": {
        "operationId": "AppController_getHello",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/cus": {
      "get": {
        "operationId": "AppController_getCustomer",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/config": {
      "get": {
        "operationId": "ConfigController_list",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/config/bulk": {
      "get": {
        "operationId": "ConfigController_getMany",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "ConfigController_createOrUpdateMany",
        "parameters": [
          
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/brands": {
      "get": {
        "operationId": "BrandsController_list",
        "summary": "List or search brands",
        "description": "Retrieve a list of brands and search by keyword",
        "parameters": [
          {
            "name": "page",
            "required": false,
            "in": "query",
            "description": "",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "in": "query",
            "description": "",
            "schema": {
              "default": 20,
              "type": "number"
            }
          },
          {
            "name": "keyword",
            "required": false,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns an array of brand and paginated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListBrandDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "brands"
        ]
      },
      "post": {
        "operationId": "BrandsController_create",
        "summary": "Create a brand",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "brands"
        ]
      }
    },
    "/brands/{id}": {
      "get": {
        "operationId": "BrandsController_getBrand",
        "summary": "Retrieve a brand",
        "description": "Retrieve an brand by specifying the ID",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "All fields of an brand are returned",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Brand not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "brands"
        ]
      },
      "put": {
        "operationId": "BrandsController_update",
        "summary": "Update a brand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBrandDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Brand updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Brand"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Brand not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "brands"
        ]
      },
      "delete": {
        "operationId": "BrandsController_delete",
        "summary": "Delete a brand",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Brand deleted successfully"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Brand not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "tags": [
          "brands"
        ]
      }
    },
    "/sections/group": {
      "get": {
        "operationId": "SectionsController_listGroup",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "SectionsController_createSectionGroup",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionGroupDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/sections/group/{id}": {
      "get": {
        "operationId": "SectionsController_getSectionGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "SectionsController_updateSectionGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionGroupDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "SectionsController_deleteSectionGroup",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/sections/{id}": {
      "get": {
        "operationId": "SectionsController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "SectionsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "SectionsController_delete",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/sections": {
      "get": {
        "operationId": "SectionsController_list",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "SectionsController_create",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSectionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/products/{id}": {
      "get": {
        "operationId": "ProductsController_get",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "operationId": "ProductsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/products": {
      "get": {
        "operationId": "ProductsController_list",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "ProductsController_create",
        "parameters": [
          
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/files/upload": {
      "post": {
        "operationId": "FilesController_uploadFile",
        "parameters": [
          
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admins": {
      "get": {
        "operationId": "AdminsController_listUsers",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "operationId": "AdminsController_adminCreateUser",
        "parameters": [
          
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    },
    "/admins/group": {
      "get": {
        "operationId": "AdminsController_listGroups",
        "parameters": [
          
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admins/group/{groupName}": {
      "get": {
        "operationId": "AdminsController_listUsersInGroup",
        "parameters": [
          {
            "name": "groupName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admins/group/{groupName}/{username}": {
      "put": {
        "operationId": "AdminsController_adminAddUserToGroup",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "operationId": "AdminsController_adminRemoveUserFromGroup",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "groupName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admins/{username}": {
      "get": {
        "operationId": "AdminsController_adminGetUserWithGroups",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/admins/{username}/{action}": {
      "post": {
        "operationId": "AdminsController_adminAct",
        "parameters": [
          {
            "name": "username",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "action",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "description": ""
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "cats",
      "description": ""
    }
  ],
  "servers": [
    
  ],
  "components": {
    "schemas": {
      "Brand": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean"
          }
        },
        "required": [
          "name",
          "slug",
          "description",
          "enabled"
        ]
      },
      "ListBrandDto": {
        "type": "object",
        "properties": {
          "docs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Brand"
            }
          },
          "totalDocs": {
            "type": "number"
          },
          "page": {
            "type": "number",
            "default": 1
          },
          "limit": {
            "type": "number",
            "default": 20
          }
        },
        "required": [
          "docs",
          "totalDocs",
          "page",
          "limit"
        ]
      },
      "CreateBrandDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "enabled": {
            "type": "boolean",
            "default": true
          }
        },
        "required": [
          "name"
        ]
      },
      "CreateSectionGroupDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "CreateSectionDto": {
        "type": "object",
        "properties": {
          
        }
      },
      "Product": {
        "type": "object",
        "properties": {
          
        }
      }
    }
  }
}